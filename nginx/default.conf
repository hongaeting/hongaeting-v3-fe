upstream api-server {
  least_conn;
  server backend:4000 weight=10 max_fails=3 fail_timeout=30s;
}

upstream peer-server {
  least_conn;
  server peerjs-server:3001 weight=10 max_fails=3 fail_timeout=30s;
}

server {
  server_name blytog.com www.blytog.com;

  location / {
    root /usr/share/nginx/html;
    index index.html index.htm;
    try_files $uri $uri/ /index.html;
  }

  listen 443 ssl; # managed by Certbot
  ssl_certificate /root/etc/letsencrypt/live/blytog.com/fullchain.pem;
  ssl_certificate_key /root/etc/letsencrypt/live/blytog.com/privkey.pem; # managed by Certbot
  include /root/etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  ssl_dhparam /root/etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

  location /api/v1 {
    proxy_pass  https://api-server;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
  }

  location /socket.io {
    proxy_pass  https://api-server;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
  }

   location /peerjs {
    proxy_pass http://peer-server;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto https;
    proxy_redirect off;
  }

  error_page   500 502 503 504  /50x.html;
  
  location = /50x.html {
    root   /usr/share/nginx/html;
  }
}

server {
  if ($host = www.blytog.com) {
    return 301 https://$host$request_uri;
  } # managed by Certbot
  if ($host = blytog.com) {
    return 301 https://$host$request_uri;
  } # managed by Certbot

  listen 80;
  server_name blytog.com www.blytog.com;
  return 404; # managed by Certbot
}
